name: CI

# run-name: executed by ${{ github.actor }} 

on:
  workflow_dispatch:    
  push:
    branches: [ "master" ]
  # pull_request:
  #   branches: [ "master" ]

jobs:

  # test:
    
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v4
  #   - name: Install NodeJS
  #     uses: actions/setup-node@v4
  #     with:
  #       node-version: 20
  #   - name: Cache dependencies
  #     uses: actions/cache@v4
  #     with:
  #       path: ~/.npm
  #       key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
  #   - name: Install dependencies
  #     run: npm ci
  #   # - name: Run tests
  #   #   run: npm run test-ci

  # build:
  #   needs: test
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v4
  #   - name: Install NodeJS
  #     uses: actions/setup-node@v4
  #     with:
  #       node-version: 20
  #   - name: Cache dependencies
  #     uses: actions/cache@v4
  #     with:
  #       path: ~/.npm
  #       key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}        
  #   - name: Install dependencies
  #     run: npm ci
  #   - name: Build frontend
  #     run: npm run build
  #   - name: upload artifacts
  #     uses: actions/upload-artifact@v4
  #     with:
  #       name: build-files
  #       path: build
  # deploy:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps: 
  #     - name: Get build artifacts 
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: build-files
  #     - name: Output contents
  #       run: ls
  #     # - name: Deploy


  # build_docker_image:
  #   # needs: test
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v4
  #   # - name: Build Docker image
  #   #   run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)
  #   - name: Set up Docker Buildx
  #     uses: docker/setup-buildx-action@v3
  #   - name: Login to GitHub Docker Registry
  #     uses: docker/login-action@v3
  #     with:
  #       registry: ghcr.io
  #       username: ${{ github.actor }}
  #       password: ${{ secrets.ACCESS_TOKEN }}
  #   - name: Login to ACR
  #     uses: docker/login-action@v3
  #     with:
  #       registry: ermis.azurecr.io
  #       username: ${{ secrets.AZURE_CLIENT_ID }}
  #       password: ${{ secrets.AZURE_CLIENT_SECRET }}
  #   - name: Build and push Docker image
  #     uses: docker/build-push-action@v6
  #     with:
  #       context: .
  #       push: true
  #       tags: |
  #         ghcr.io/${{github.repository}}/react_frontend:latest
  #         ghcr.io/${{github.repository}}/react_frontend:${{ github.sha }}
  #         ermis.azurecr.io/react_frontend:latest

  
  deploy_to_container_apps:
    # needs: build_docker_image
    runs-on: ubuntu-latest

    steps:
      - name: Log in to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Build and deploy Container App
        uses: azure/container-apps-deploy-action@v2        
        with:
          disableTelemetry: true
          containerAppName: frontend-react
          imageToDeploy: ermis.azurecr.io/react_frontend:latest
            # mcr.microsoft.com/azuredocs/react_frontend:latest
          location: westeurope
    

  